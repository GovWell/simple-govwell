// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

enum RecordStatus {
  Submitted
  InProgress
  Rejected
  Completed
  Issued
}

model Record {
  id Int @id @default(autoincrement())

  // primitives
  status RecordStatus

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  workflowSteps WorkflowStep[]
}

enum WorkflowStepType {
  Review
  SendEmail
  IssueRecord
}

enum WorkflowStepStatus {
  Pending
  Completed
}

model WorkflowStep {
  id Int @id @default(autoincrement())

  // primitives
  order  Int // 0-based index
  status WorkflowStepStatus
  type   WorkflowStepType

  // timestamps
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // foreign keys
  recordId Int

  // relations
  record Record  @relation(fields: [recordId], references: [id])
  emails Email[]

  @@index([recordId])
}

model Email {
  id Int @id @default(autoincrement())

  // primitives
  subject String
  body    String

  // timestamps
  createdAt DateTime @default(now())

  // relations
  workflowStepId Int
  workflowStep   WorkflowStep @relation(fields: [workflowStepId], references: [id])

  @@index([workflowStepId])
}
